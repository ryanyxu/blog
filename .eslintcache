[{"/Users/ryanxu/Documents/projects/blog/src/App.js":"1","/Users/ryanxu/Documents/projects/blog/src/index.js":"2","/Users/ryanxu/Documents/projects/blog/src/NewPost.js":"3"},{"size":3957,"mtime":1607922400485,"results":"4","hashOfConfig":"5"},{"size":616,"mtime":1607874418083,"results":"6","hashOfConfig":"5"},{"size":2792,"mtime":1607913666563,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tyr2ef",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/ryanxu/Documents/projects/blog/src/App.js",["15","16","17","18"],"/Users/ryanxu/Documents/projects/blog/src/index.js",[],"/Users/ryanxu/Documents/projects/blog/src/NewPost.js",["19","20","21","22","23","24","25","26","27"],"import React, { useState, useEffect } from 'react';\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  KeyBindingUtil,\n  convertFromRaw,\n  convertToRaw} from 'draft-js';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    useParams,\n    withRouter,\n    Link\n  } from \"react-router-dom\";\n\nimport 'draft-js/dist/Draft.css';\nimport './App.css'\n\nimport firebase from 'firebase';\n\nimport { IconButton, Grid } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\n\nconst NewPost = () => {\n    const {id} = useParams()\n\n    const [titleEditorState, setTitleEditorState] = React.useState(\n        () => EditorState.createEmpty()\n    );\n\n    const [editorState, setEditorState] = React.useState(\n        () => EditorState.createEmpty()\n    );\n\n    const handleKeyCommand = (command, editorState) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n            setEditorState(newState);\n            return 'handled';\n        }\n\n        return 'not-handled';\n    }\n\n    const {hasCommandModifier} = KeyBindingUtil\n\n    const keyBinding = (e) => {\n        if (e.keyCode === 75 /* `S` key */ && hasCommandModifier(e)) {\n            firebase.database().ref(\"user\").child(id).push({\n                date: Date.now().toString(),\n                title: JSON.stringify(convertToRaw(titleEditorState.getCurrentContent())),\n                content: JSON.stringify(convertToRaw(editorState.getCurrentContent()))\n            })\n        }\n        return false;\n    }\n\n    const submit = () => {\n        firebase.database().ref(\"user\").child(id).push({\n            date: Date.now().toString(),\n            title: JSON.stringify(convertToRaw(titleEditorState.getCurrentContent())),\n            content: JSON.stringify(convertToRaw(editorState.getCurrentContent()))\n          })\n       //window.location.href= '/' + id\n    }\n    \n    return <div className='new-post'>\n        <Editor\n            className='new-post-title'\n            editorState={titleEditorState}\n            onChange={setTitleEditorState} \n            handleKeyCommand={handleKeyCommand}\n            readOnly={false}\n            placeholder='Title'\n        />\n        <br/>\n        <Editor\n            editorState={editorState}\n            onChange={setEditorState} \n            handleKeyCommand={handleKeyCommand}\n            readOnly={false}\n            placeholder=\"people don't realize that ravens are actually purple...\"\n        />\n        <Link to={'/' + id} onClick={submit}>\n            <Grid container justify = \"center\">\n                <IconButton className='submit-btn' aria-label=\"submit\">\n                    <SendIcon/>\n                </IconButton>\n            </Grid>\n        </Link>\n    </div>;\n}\n\nexport default NewPost",{"ruleId":"28","severity":1,"message":"29","line":1,"column":17,"nodeType":"30","messageId":"31","endLine":1,"endColumn":25},{"ruleId":"28","severity":1,"message":"32","line":1,"column":27,"nodeType":"30","messageId":"31","endLine":1,"endColumn":36},{"ruleId":"28","severity":1,"message":"33","line":16,"column":5,"nodeType":"30","messageId":"31","endLine":16,"endColumn":15},{"ruleId":"28","severity":1,"message":"34","line":41,"column":9,"nodeType":"30","messageId":"31","endLine":41,"endColumn":18},{"ruleId":"28","severity":1,"message":"29","line":1,"column":17,"nodeType":"30","messageId":"31","endLine":1,"endColumn":25},{"ruleId":"28","severity":1,"message":"32","line":1,"column":27,"nodeType":"30","messageId":"31","endLine":1,"endColumn":36},{"ruleId":"28","severity":1,"message":"35","line":6,"column":3,"nodeType":"30","messageId":"31","endLine":6,"endColumn":23},{"ruleId":"28","severity":1,"message":"36","line":8,"column":3,"nodeType":"30","messageId":"31","endLine":8,"endColumn":17},{"ruleId":"28","severity":1,"message":"37","line":12,"column":22,"nodeType":"30","messageId":"31","endLine":12,"endColumn":28},{"ruleId":"28","severity":1,"message":"38","line":13,"column":5,"nodeType":"30","messageId":"31","endLine":13,"endColumn":11},{"ruleId":"28","severity":1,"message":"39","line":14,"column":5,"nodeType":"30","messageId":"31","endLine":14,"endColumn":10},{"ruleId":"28","severity":1,"message":"33","line":16,"column":5,"nodeType":"30","messageId":"31","endLine":16,"endColumn":15},{"ruleId":"28","severity":1,"message":"40","line":53,"column":11,"nodeType":"30","messageId":"31","endLine":53,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'withRouter' is defined but never used.","'emptyPost' is assigned a value but never used.","'getDefaultKeyBinding' is defined but never used.","'convertFromRaw' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'keyBinding' is assigned a value but never used."]