[{"/Users/ryanxu/Documents/projects/blog/src/App.js":"1","/Users/ryanxu/Documents/projects/blog/src/index.js":"2","/Users/ryanxu/Documents/projects/blog/src/NewPost.js":"3","/Users/ryanxu/Documents/projects/blog/src/EmptyNotepad.js":"4"},{"size":3957,"mtime":1608252844122,"results":"5","hashOfConfig":"6"},{"size":667,"mtime":1608240254358,"results":"7","hashOfConfig":"6"},{"size":2792,"mtime":1607913666563,"results":"8","hashOfConfig":"6"},{"size":4645,"mtime":1608253400612,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tyr2ef",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"/Users/ryanxu/Documents/projects/blog/src/App.js",["22","23","24","25"],"/Users/ryanxu/Documents/projects/blog/src/index.js",["26"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from 'firebase'\nimport EmptyNotepad from './EmptyNotepad'\n\nconst config = {\n  apiKey: \"AIzaSyBeezw-yyxDhs1jurdGo-fCfgywb50Wdjo\",\n  authDomain: \"rxublog.firebaseapp.com\",\n  databaseURL: \"https://rxublog-default-rtdb.firebaseio.com\",\n  projectId: \"rxublog\",\n  storageBucket: \"rxublog.appspot.com\",\n  messagingSenderId: \"1089305203848\",\n  appId: \"1:1089305203848:web:0d7ff7266c4c1d96b2fb3d\"\n};\n\nfirebase.initializeApp(config)\n\nReactDOM.render(\n  <React.StrictMode>\n    <EmptyNotepad />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["27","28"],"/Users/ryanxu/Documents/projects/blog/src/NewPost.js",["29","30","31","32","33","34","35","36","37"],"import React, { useState, useEffect } from 'react';\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  KeyBindingUtil,\n  convertFromRaw,\n  convertToRaw} from 'draft-js';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    useParams,\n    withRouter,\n    Link\n  } from \"react-router-dom\";\n\nimport 'draft-js/dist/Draft.css';\nimport './App.css'\n\nimport firebase from 'firebase';\n\nimport { IconButton, Grid } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\n\nconst NewPost = () => {\n    const {id} = useParams()\n\n    const [titleEditorState, setTitleEditorState] = React.useState(\n        () => EditorState.createEmpty()\n    );\n\n    const [editorState, setEditorState] = React.useState(\n        () => EditorState.createEmpty()\n    );\n\n    const handleKeyCommand = (command, editorState) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n            setEditorState(newState);\n            return 'handled';\n        }\n\n        return 'not-handled';\n    }\n\n    const {hasCommandModifier} = KeyBindingUtil\n\n    const keyBinding = (e) => {\n        if (e.keyCode === 75 /* `S` key */ && hasCommandModifier(e)) {\n            firebase.database().ref(\"user\").child(id).push({\n                date: Date.now().toString(),\n                title: JSON.stringify(convertToRaw(titleEditorState.getCurrentContent())),\n                content: JSON.stringify(convertToRaw(editorState.getCurrentContent()))\n            })\n        }\n        return false;\n    }\n\n    const submit = () => {\n        firebase.database().ref(\"user\").child(id).push({\n            date: Date.now().toString(),\n            title: JSON.stringify(convertToRaw(titleEditorState.getCurrentContent())),\n            content: JSON.stringify(convertToRaw(editorState.getCurrentContent()))\n          })\n       //window.location.href= '/' + id\n    }\n    \n    return <div className='new-post'>\n        <Editor\n            className='new-post-title'\n            editorState={titleEditorState}\n            onChange={setTitleEditorState} \n            handleKeyCommand={handleKeyCommand}\n            readOnly={false}\n            placeholder='Title'\n        />\n        <br/>\n        <Editor\n            editorState={editorState}\n            onChange={setEditorState} \n            handleKeyCommand={handleKeyCommand}\n            readOnly={false}\n            placeholder=\"people don't realize that ravens are actually purple...\"\n        />\n        <Link to={'/' + id} onClick={submit}>\n            <Grid container justify = \"center\">\n                <IconButton className='submit-btn' aria-label=\"submit\">\n                    <SendIcon/>\n                </IconButton>\n            </Grid>\n        </Link>\n    </div>;\n}\n\nexport default NewPost","/Users/ryanxu/Documents/projects/blog/src/EmptyNotepad.js",["38","39","40","41","42","43","44","45","46","47"],"import React, { useState, useEffect } from 'react';\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  KeyBindingUtil,\n  convertFromRaw,\n  convertToRaw} from 'draft-js';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    useParams,\n    withRouter,\n    Link\n  } from \"react-router-dom\";\n\nimport 'draft-js/dist/Draft.css';\nimport './App.css'\n\nimport firebase from 'firebase';\n\nimport { IconButton, Grid, Divider, Button, Box,List, ListItem, ListItemText} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport NewPost from './NewPost';\n\n\nconst EmptyNotepad = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/:page\" children={<Notepad/>} />\n        <Route path='/' children={<Home/>} />\n      </Switch>\n    </Router>\n  );\n}\n\n\nclass Home extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {pages: []}\n      firebase.database().ref(\"page\").on('child_added', (snapshot) => {\n        this.setState({pages: [...this.state.pages, snapshot.key]})\n      })\n    }\n  \n    render() {\n    return <div className='home'>\n        <Grid container direction=\"row\" justify = \"center\" alignItems = \"center\">\n\n            <div className='heading'>Ryan's notes</div>\n\n        <Divider orientation=\"vertical\" flexItem/>\n        <Box style={{maxHeight: '60vh', overflow: 'auto', width: 'auto', }}>\n        {\n                this.state.pages.map((page) => \n                    <ListItem button component=\"a\" href={'/' + page}>\n                        {page}\n                    </ListItem>\n                )\n            }\n\n        </Box>\n\n        </Grid>\n        \n        </div>\n    }\n  }\n\nconst Notepad = () => {\n    const {page} = useParams()\n\n    const getEmpty = () => {\n        let key = page + 'T'\n        var test = \"{\\\"blocks\\\":[{\\\"key\\\":\\\"\" + key + \"\\\",\\\"text\\\":\\\"\" + page + \"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\"\n        return EditorState.createWithContent(convertFromRaw(JSON.parse(test)))\n    }\n\n    const [titleEditorState, setTitleEditorState] = React.useState(\n        () => getEmpty())\n    \n    const [editorState, setEditorState] = React.useState(\n        () => EditorState.createEmpty());\n\n    useEffect(() => {\n        firebase.database().ref(\"page\").child(page).on('value', (snapshot) => {\n            if (snapshot.val()) {\n                let title = EditorState.createWithContent(convertFromRaw(JSON.parse(snapshot.val().title)))\n                let editor = EditorState.createWithContent(convertFromRaw(JSON.parse(snapshot.val().content)))\n                setTitleEditorState(title)\n                setEditorState(editor)\n            }\n        });\n    }, [])\n\n    const submit = () => {\n        firebase.database().ref(\"page\").child(page).set({\n            date: Date.now().toString(),\n            title: JSON.stringify(convertToRaw(titleEditorState.getCurrentContent())),\n            content: JSON.stringify(convertToRaw(editorState.getCurrentContent()))\n          })\n    }\n    \n\n    const handleKeyCommand = (command, editorState, b) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n            if (b) {\n                setTitleEditorState(newState);\n            } else {\n                setEditorState(newState);\n            }\n            return 'handled';\n        }\n        \n        \n\n        return 'not-handled';\n    }\n\n    const {hasCommandModifier} = KeyBindingUtil\n\n    const keyBinding = (e) => {\n        console.log(e.keyCode)\n        if (e.keyCode === 83 /* `S` key */ && hasCommandModifier(e)) {\n            e.preventDefault()\n            submit()\n        }\n        return getDefaultKeyBinding(e);\n    }\n\n    return <div className='empty-notepad'>\n        <div  className='empty-notepad-title'>\n            <Editor \n                editorState={titleEditorState}\n                onChange={setTitleEditorState} \n                handleKeyCommand={(c, e) => handleKeyCommand(c, e, true)}\n                keyBindingFn={keyBinding}\n                readOnly={false}\n                placeholder='title'\n            />\n        </div>\n        \n        <Divider variant=\"middle\" />\n        <div className='empty-notepad-content'>\n            \n        <Editor \n            editorState={editorState}\n            onChange={setEditorState} \n            handleKeyCommand={(c, e) => handleKeyCommand(c, e, false)}\n            keyBindingFn={keyBinding}\n            readOnly={false}\n            placeholder=\"my thoughts...\"\n        />\n        </div>\n        \n    </div>\n}\n\nexport default EmptyNotepad",{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"53","line":16,"column":5,"nodeType":"50","messageId":"51","endLine":16,"endColumn":15},{"ruleId":"48","severity":1,"message":"54","line":41,"column":9,"nodeType":"50","messageId":"51","endLine":41,"endColumn":18},{"ruleId":"48","severity":1,"message":"55","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":11},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"60","line":6,"column":3,"nodeType":"50","messageId":"51","endLine":6,"endColumn":23},{"ruleId":"48","severity":1,"message":"61","line":8,"column":3,"nodeType":"50","messageId":"51","endLine":8,"endColumn":17},{"ruleId":"48","severity":1,"message":"62","line":12,"column":22,"nodeType":"50","messageId":"51","endLine":12,"endColumn":28},{"ruleId":"48","severity":1,"message":"63","line":13,"column":5,"nodeType":"50","messageId":"51","endLine":13,"endColumn":11},{"ruleId":"48","severity":1,"message":"64","line":14,"column":5,"nodeType":"50","messageId":"51","endLine":14,"endColumn":10},{"ruleId":"48","severity":1,"message":"53","line":16,"column":5,"nodeType":"50","messageId":"51","endLine":16,"endColumn":15},{"ruleId":"48","severity":1,"message":"65","line":53,"column":11,"nodeType":"50","messageId":"51","endLine":53,"endColumn":21},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"53","line":16,"column":5,"nodeType":"50","messageId":"51","endLine":16,"endColumn":15},{"ruleId":"48","severity":1,"message":"66","line":17,"column":5,"nodeType":"50","messageId":"51","endLine":17,"endColumn":9},{"ruleId":"48","severity":1,"message":"67","line":25,"column":10,"nodeType":"50","messageId":"51","endLine":25,"endColumn":20},{"ruleId":"48","severity":1,"message":"68","line":25,"column":37,"nodeType":"50","messageId":"51","endLine":25,"endColumn":43},{"ruleId":"48","severity":1,"message":"69","line":25,"column":49,"nodeType":"50","messageId":"51","endLine":25,"endColumn":53},{"ruleId":"48","severity":1,"message":"70","line":25,"column":65,"nodeType":"50","messageId":"51","endLine":25,"endColumn":77},{"ruleId":"48","severity":1,"message":"71","line":26,"column":8,"nodeType":"50","messageId":"51","endLine":26,"endColumn":15},{"ruleId":"48","severity":1,"message":"72","line":27,"column":8,"nodeType":"50","messageId":"51","endLine":27,"endColumn":15},{"ruleId":"73","severity":1,"message":"74","line":99,"column":8,"nodeType":"75","endLine":99,"endColumn":10,"suggestions":"76"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'withRouter' is defined but never used.","'emptyPost' is assigned a value but never used.","'App' is defined but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'getDefaultKeyBinding' is defined but never used.","'convertFromRaw' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'keyBinding' is assigned a value but never used.","'Link' is defined but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'ListItemText' is defined but never used.","'AddIcon' is defined but never used.","'NewPost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [page]",{"range":"82","text":"83"},[2749,2751],"[page]"]